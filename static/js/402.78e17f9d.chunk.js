"use strict";(self.webpackChunk_3d_examples=self.webpackChunk_3d_examples||[]).push([[402],{1935:function(e,t,r){r.d(t,{xC:function(){return c}});var i=r(5671),a=r(3144),s=r(3562),n=r(3500),o=r(136),l=r(4062),u=r(6531),h=function(e){(0,o.Z)(r,e);var t=(0,l.Z)(r);function r(e,a){var n;return(0,i.Z)(this,r),(n=t.call(this)).textureID=void 0!==a?a:"tDiffuse",e instanceof s.jyz?(n.uniforms=e.uniforms,n.material=e):e&&(n.uniforms=s.rDY.clone(e.uniforms),n.material=new s.jyz({defines:Object.assign({},e.defines),uniforms:n.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),n.fsQuad=new u.T(n.material),n}return(0,a.Z)(r,[{key:"render",value:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}]),r}(u.w),d=function(e){(0,o.Z)(r,e);var t=(0,l.Z)(r);function r(e,a){var s;return(0,i.Z)(this,r),(s=t.call(this)).scene=e,s.camera=a,s.clear=!0,s.needsSwap=!1,s.inverse=!1,s}return(0,a.Z)(r,[{key:"render",value:function(e,t,r){var i,a,s=e.getContext(),n=e.state;n.buffers.color.setMask(!1),n.buffers.depth.setMask(!1),n.buffers.color.setLocked(!0),n.buffers.depth.setLocked(!0),this.inverse?(i=0,a=1):(i=1,a=0),n.buffers.stencil.setTest(!0),n.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),n.buffers.stencil.setFunc(s.ALWAYS,i,4294967295),n.buffers.stencil.setClear(a),n.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),n.buffers.color.setLocked(!1),n.buffers.depth.setLocked(!1),n.buffers.stencil.setLocked(!1),n.buffers.stencil.setFunc(s.EQUAL,1,4294967295),n.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),n.buffers.stencil.setLocked(!0)}}]),r}(u.w),f=function(e){(0,o.Z)(r,e);var t=(0,l.Z)(r);function r(){var e;return(0,i.Z)(this,r),(e=t.call(this)).needsSwap=!1,e}return(0,a.Z)(r,[{key:"render",value:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}]),r}(u.w),c=function(){function e(t,r){if((0,i.Z)(this,e),this.renderer=t,void 0===r){var a={minFilter:s.wem,magFilter:s.wem,format:s.wk1},o=t.getSize(new s.FM8);this._pixelRatio=t.getPixelRatio(),this._width=o.width,this._height=o.height,(r=new s.dd2(this._width*this._pixelRatio,this._height*this._pixelRatio,a)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=r.width,this._height=r.height;this.renderTarget1=r,this.renderTarget2=r.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===n.C&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===h&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new h(n.C),this.clock=new s.SUY}return(0,a.Z)(e,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"removePass",value:function(e){var t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}},{key:"isLastEnabledPass",value:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}},{key:"render",value:function(e){void 0===e&&(e=this.clock.getDelta());for(var t=this.renderer.getRenderTarget(),r=!1,i=0,a=this.passes.length;i<a;i++){var s=this.passes[i];if(!1!==s.enabled){if(s.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),s.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),s.needsSwap){if(r){var n=this.renderer.getContext(),o=this.renderer.state.buffers.stencil;o.setFunc(n.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.setFunc(n.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==d&&(s instanceof d?r=!0:s instanceof f&&(r=!1))}}this.renderer.setRenderTarget(t)}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getSize(new s.FM8);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this._width=e,this._height=t;var r=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(r,i),this.renderTarget2.setSize(r,i);for(var a=0;a<this.passes.length;a++)this.passes[a].setSize(r,i)}},{key:"setPixelRatio",value:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}]),e}(),v=(new s.iKG(-1,1,1,-1,0,1),new s.u9r);v.setAttribute("position",new s.a$l([-1,3,0,-1,-1,0,3,-1,0],3)),v.setAttribute("uv",new s.a$l([0,2,0,0,2,0],2))},6531:function(e,t,r){r.d(t,{T:function(){return u},w:function(){return n}});var i=r(5671),a=r(3144),s=r(3562),n=function(){function e(){(0,i.Z)(this,e),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return(0,a.Z)(e,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}]),e}(),o=new s.iKG(-1,1,1,-1,0,1),l=new s.u9r;l.setAttribute("position",new s.a$l([-1,3,0,-1,-1,0,3,-1,0],3)),l.setAttribute("uv",new s.a$l([0,2,0,0,2,0],2));var u=function(){function e(t){(0,i.Z)(this,e),this._mesh=new s.Kj0(l,t)}return(0,a.Z)(e,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(e){e.render(this._mesh,o)}},{key:"material",get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}]),e}()},6938:function(e,t,r){r.d(t,{C:function(){return l}});var i=r(5671),a=r(3144),s=r(136),n=r(4062),o=r(3562),l=function(e){(0,s.Z)(r,e);var t=(0,n.Z)(r);function r(e,a,s,n,l){var u;return(0,i.Z)(this,r),(u=t.call(this)).scene=e,u.camera=a,u.overrideMaterial=s,u.clearColor=n,u.clearAlpha=void 0!==l?l:0,u.clear=!0,u.clearDepth=!1,u.needsSwap=!1,u._oldClearColor=new o.Ilk,u}return(0,a.Z)(r,[{key:"render",value:function(e,t,r){var i,a,s=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=a),e.autoClear=s}}]),r}(r(6531).w)},6853:function(e,t,r){r.d(t,{m:function(){return d}});var i=r(5671),a=r(3144),s=r(136),n=r(4062),o=r(3562),l=r(6531),u=r(3500),h={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new o.Ilk(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n\t\t\tfloat v = dot( texel.xyz, luma );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"},d=function(e){(0,s.Z)(r,e);var t=(0,n.Z)(r);function r(e,a,s,n){var d;(0,i.Z)(this,r),(d=t.call(this)).strength=void 0!==a?a:1,d.radius=s,d.threshold=n,d.resolution=void 0!==e?new o.FM8(e.x,e.y):new o.FM8(256,256),d.clearColor=new o.Ilk(0,0,0);var f={minFilter:o.wem,magFilter:o.wem,format:o.wk1};d.renderTargetsHorizontal=[],d.renderTargetsVertical=[],d.nMips=5;var c=Math.round(d.resolution.x/2),v=Math.round(d.resolution.y/2);d.renderTargetBright=new o.dd2(c,v,f),d.renderTargetBright.texture.name="UnrealBloomPass.bright",d.renderTargetBright.texture.generateMipmaps=!1;for(var m=0;m<d.nMips;m++){var g=new o.dd2(c,v,f);g.texture.name="UnrealBloomPass.h"+m,g.texture.generateMipmaps=!1,d.renderTargetsHorizontal.push(g);var p=new o.dd2(c,v,f);p.texture.name="UnrealBloomPass.v"+m,p.texture.generateMipmaps=!1,d.renderTargetsVertical.push(p),c=Math.round(c/2),v=Math.round(v/2)}void 0===h&&console.error("THREE.UnrealBloomPass relies on LuminosityHighPassShader");var x=h;d.highPassUniforms=o.rDY.clone(x.uniforms),d.highPassUniforms.luminosityThreshold.value=n,d.highPassUniforms.smoothWidth.value=.01,d.materialHighPassFilter=new o.jyz({uniforms:d.highPassUniforms,vertexShader:x.vertexShader,fragmentShader:x.fragmentShader,defines:{}}),d.separableBlurMaterials=[];var T=[3,5,7,9,11];c=Math.round(d.resolution.x/2),v=Math.round(d.resolution.y/2);for(var b=0;b<d.nMips;b++)d.separableBlurMaterials.push(d.getSeperableBlurMaterial(T[b])),d.separableBlurMaterials[b].uniforms.texSize.value=new o.FM8(c,v),c=Math.round(c/2),v=Math.round(v/2);d.compositeMaterial=d.getCompositeMaterial(d.nMips),d.compositeMaterial.uniforms.blurTexture1.value=d.renderTargetsVertical[0].texture,d.compositeMaterial.uniforms.blurTexture2.value=d.renderTargetsVertical[1].texture,d.compositeMaterial.uniforms.blurTexture3.value=d.renderTargetsVertical[2].texture,d.compositeMaterial.uniforms.blurTexture4.value=d.renderTargetsVertical[3].texture,d.compositeMaterial.uniforms.blurTexture5.value=d.renderTargetsVertical[4].texture,d.compositeMaterial.uniforms.bloomStrength.value=a,d.compositeMaterial.uniforms.bloomRadius.value=.1,d.compositeMaterial.needsUpdate=!0;d.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],d.bloomTintColors=[new o.Pa4(1,1,1),new o.Pa4(1,1,1),new o.Pa4(1,1,1),new o.Pa4(1,1,1),new o.Pa4(1,1,1)],d.compositeMaterial.uniforms.bloomTintColors.value=d.bloomTintColors,void 0===u.C&&console.error("THREE.UnrealBloomPass relies on CopyShader");var w=u.C;return d.copyUniforms=o.rDY.clone(w.uniforms),d.copyUniforms.opacity.value=1,d.materialCopy=new o.jyz({uniforms:d.copyUniforms,vertexShader:w.vertexShader,fragmentShader:w.fragmentShader,blending:o.WMw,depthTest:!1,depthWrite:!1,transparent:!0}),d.enabled=!0,d.needsSwap=!1,d._oldClearColor=new o.Ilk,d.oldClearAlpha=1,d.basic=new o.vBJ,d.fsQuad=new l.T(null),d}return(0,a.Z)(r,[{key:"dispose",value:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(var t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()}},{key:"setSize",value:function(e,t){var r=Math.round(e/2),i=Math.round(t/2);this.renderTargetBright.setSize(r,i);for(var a=0;a<this.nMips;a++)this.renderTargetsHorizontal[a].setSize(r,i),this.renderTargetsVertical[a].setSize(r,i),this.separableBlurMaterials[a].uniforms.texSize.value=new o.FM8(r,i),r=Math.round(r/2),i=Math.round(i/2)}},{key:"render",value:function(e,t,i,a,s){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),s&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=i.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,l=0;l<this.nMips;l++)this.fsQuad.material=this.separableBlurMaterials[l],this.separableBlurMaterials[l].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[l].uniforms.direction.value=r.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[l]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=r.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[l]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[l];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(i),this.fsQuad.render(e)),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=n}},{key:"getSeperableBlurMaterial",value:function(e){return new o.jyz({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new o.FM8(.5,.5)},direction:{value:new o.FM8(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat fSigma = float(SIGMA);\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}},{key:"getCompositeMaterial",value:function(e){return new o.jyz({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform sampler2D dirtTexture;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}]),r}(l.w);d.BlurDirectionX=new o.FM8(1,0),d.BlurDirectionY=new o.FM8(0,1)},3500:function(e,t,r){r.d(t,{C:function(){return i}});var i={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}"}}}]);